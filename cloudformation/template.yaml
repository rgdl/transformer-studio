Parameters:

  RegionParam:
    Type: String
    Description: The AWS region

  WebDomainParam:
    Type: String
    Description: The web domain, also the name of the S3 bucket

  CertificateArnParam:
    Type: String
    Description: ARN for the ACM Certificate, to allow https. Has to be created separately, due to weirdness around regions

  MXRecordParam:
    Type: String
    Description: The value of the MX record to be added in Route53 for email to work

Resources:

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref WebDomainParam
      WebsiteConfiguration:
        IndexDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: false
        RestrictPublicBuckets: false

  MyBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebDomainParam
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: 's3:GetObject'
            Principal: '*'
            Resource: !Sub 'arn:aws:s3:::${WebDomainParam}/*'

  CloudFront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref WebDomainParam
          - !Sub 'www.${WebDomainParam}'
        HttpVersion: http2
        Origins:
          - DomainName: !Sub '${WebDomainParam}.s3-website-${RegionParam}.amazonaws.com'
            Id: S3Origin
            CustomOriginConfig: 
              OriginProtocolPolicy: http-only
        DefaultRootObject: index.html
        Enabled: true
        DefaultCacheBehavior:
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArnParam
          MinimumProtocolVersion: 'TLSv1.2_2021'
          SslSupportMethod: sni-only

  MyHostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: !Ref WebDomainParam

  ARecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Ref WebDomainParam
      Type: A
      HostedZoneId: !Ref MyHostedZone
      AliasTarget:
        DNSName: !GetAtt CloudFront.DomainName
        HostedZoneId: Z2FDTNDATAQYW2

  AAAARecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Ref WebDomainParam
      Type: AAAA
      HostedZoneId: !Ref MyHostedZone
      AliasTarget:
        DNSName: !GetAtt CloudFront.DomainName
        HostedZoneId: Z2FDTNDATAQYW2

  MXRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Ref WebDomainParam
      Type: MX
      TTL: 900
      HostedZoneId: !Ref MyHostedZone
      ResourceRecords:
        - !Ref MXRecordParam

  wwwMyHostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: !Sub 'www.${WebDomainParam}'

  wwwARecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Sub 'www.${WebDomainParam}'
      Type: A
      HostedZoneId: !Ref wwwMyHostedZone
      AliasTarget:
        DNSName: !GetAtt CloudFront.DomainName
        HostedZoneId: Z2FDTNDATAQYW2

  wwwAAAARecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Sub 'www.${WebDomainParam}'
      Type: AAAA
      HostedZoneId: !Ref wwwMyHostedZone
      AliasTarget:
        DNSName: !GetAtt CloudFront.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
